name: Build
env:
  RUN_DEPLOY: ${{ startsWith( github.event.head_commit.message, '[DEPLOY]' }}

on:
  push:
    branches: main
  pull_request:
    branches: '*'

jobs:
  build:
    defaults:
      run:
        shell: bash -l {0}
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [
          "ubuntu-latest", 
        ]

    steps:
      - name: first
        run: |
          echo "Running Deploy!"

      - name: "true"
        if: ${{ RUN_DEPLOY }}
        run: |
          echo "Running Deploy!"

      - name: "false"
        if: ${{ !RUN_DEPLOY }}
        run: |
          echo "Not Running Deploy!"

      - name: "last"
        run: |
          echo "last"

      # - name: Checkout
      #   uses: actions/checkout@v3

      # - name: Setup Mambaforge
      #   uses: conda-incubator/setup-miniconda@v2
      #   with:
      #     miniforge-variant: Mambaforge
      #     miniforge-version: latest
      #     environment-file: environment.yml
      #     use-mamba: true


      # - name: Install Widgetron
      #   if: RUN_DEPLOY
      #   run: |
      #     python -m pip install . --no-build-isolation
      
      # - name: Print Help
      #   if: RUN_DEPLOY
      #   run: |
      #     widgetron -h
      
      # - name: Setup Test Env
      #   if: RUN_DEPLOY
      #   run: |
      #     mamba env create -f examples/single_notebook/environment.yml -p examples/single_notebook/.envs/dev

      # - name: Run Widgetron
      #   if: RUN_DEPLOY
      #   run: |
      #     widgetron examples/single_notebook --outdir=output --installer_filename=single_notebook_installer
      #     rm -r examples/single_notebook/widgetron_temp_files
      
      # - name: Run Installer
      #   if: RUN_DEPLOY
      #   run: |
      #     sh output/single_notebook_installer -b -p ~/single_notebook
      
      # - name: Upload Installer
      #   if: RUN_DEPLOY
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: linux_installer
      #     path: output/*
      #     if-no-files-found: error

      # - name: Package
      #   run: |
      #     set -eux

      #     pip install build
      #     python -m build
      #   if: matrix.os == 'ubuntu-latest'
        
      # - name: Upload Artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: package-artifacts
      #     path: dist/*
      #     if-no-files-found: error
      #   if: matrix.os == 'ubuntu-latest'
